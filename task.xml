<Task name="Release v0.0.8 — Workstream T3: Terrain Shaders & Pipeline">
  <Policy>
    - Scope: bump project version to **0.0.8** and document Workstream **T3 — Terrain Shaders & Pipeline** in **CHANGELOG.md** and **README.md**.
    - Keep diffs minimal and idempotent. Preserve existing formatting and headings.
    - Use regex-safe upserts; do not duplicate sections if they already mention **0.0.8**.
    - If a file doesn’t exist (e.g., CHANGELOG.md), create it.
  </Policy>

  <Context>
    Highlights from T3 implemented in the codebase:
    - New `src/terrain/pipeline.rs` defining `TerrainPipeline` with 3 bind group layouts (globals UBO, height R32Float + NonFiltering sampler, LUT + Filtering sampler) and an sRGB color target.
    - `src/terrain/mod.rs`:
      - `ColormapLUT` with runtime format selection (`Rgba8UnormSrgb` by default; `VF_FORCE_LUT_UNORM` to force `Rgba8Unorm`).
      - `TerrainSpike` Python-facing spike that caches pipeline + bind groups; uses no depth in render pass; readback to PNG.
      - Exact single-line docstring for `build_grid_xyuv` clarifying `[x, z, u, v]` layout.
      - Local comment documenting why height maps use **NonFiltering (nearest)** for `R32Float`.
      - Debug helpers: `debug_lut_format`, `set_camera_look_at`, `debug_uniforms_f32`.
    - Tests verifying uniform layout (176 bytes) and WGPU clip-space projection.
  </Context>

  <Edits>

```
<!-- 1) Cargo.toml: bump version to 0.0.8 (idempotent) -->
<File path="Cargo.toml" intent="Bump crate version to 0.0.8" create_if_missing="false">
  <Upsert>
```

<![CDATA[
# only change the first version key under [package]
s#(?ms)^\[package\]\s+(?:.*\n)*?version\s*=\s*"\d+\.\d+\.\d+"#\0#; s####
]]>

```
  </Upsert>
  <Upsert>
```

<![CDATA[
s#^(version\s*=\s*")\d+\.\d+\.\d+"#\10.0.8"#m
]]>

```
  </Upsert>
</File>

<!-- 2) Optional Python version exposure if present -->
<File path="python/_vulkan_forge/__init__.py" intent="Set __version__ to 0.0.8 if file exists" create_if_missing="false" only_if_exists="true">
  <Upsert>
```

<![CDATA[
s#^__version__\s*=\s*["']\d+\.\d+\.\d+["']#__version__ = "0.0.8"#m
]]>

```
  </Upsert>
  <Insert anchor="^$" position="end" only_if_not_exists="^__version__\s*=\s*['\"]0\.0\.8['\"]$">
```

<![CDATA[
__version__ = "0.0.8"
]]>

```
  </Insert>
</File>

<!-- 3) CHANGELOG.md: add 0.0.8 section (create if missing). Use Keep a Changelog style. -->
<File path="CHANGELOG.md" intent="Add v0.0.8 release notes for Workstream T3" create_if_missing="true">
  <Insert anchor="^# Changelog" position="before" only_if_not_exists="^# Changelog">
```

<![CDATA[
# Changelog
All notable changes to this project will be documented in this file.

This project adheres to [Keep a Changelog](https://keepachangelog.com/en/1.1.0/) and follows SemVer (pre-1.0 may include breaking changes).
]]>

```
  </Insert>

  <Insert anchor="^## \[0\.0\.8\]" position="before" only_if_not_exists="^## \[0\.0\.8\]">
```

<![CDATA[
## [0.0.8] — 2025-08-16
### Added
- **Workstream T3 — Terrain Shaders & Pipeline.**
- `TerrainPipeline` in `src/terrain/pipeline.rs` with:
  - Bind group layouts: (0) Globals UBO, (1) height **R32Float** + **NonFiltering** sampler, (2) LUT texture + Filtering sampler.
  - Vertex layout: `position.xy` and `uv` as two `Float32x2` attributes.
  - sRGB color target (recommended): `Rgba8UnormSrgb`.
- Python-facing spike `TerrainSpike` for offscreen rendering and PNG output.
- `ColormapLUT` supporting runtime format selection; defaults to sRGB, can force UNORM via `VF_FORCE_LUT_UNORM`.

### Changed
- Cached pipeline and bind groups now used in the render pass (no runtime re-creation).
- Documentation updates:
  - Exact single-line docstring for `build_grid_xyuv` clarifying `[x, z, u, v]` layout.
  - Local comment explaining **NonFiltering (nearest)** requirement for `R32Float` height textures.

### Fixed
- Verified uniform block layout (176 bytes, std140-compatible) and WGPU clip-space projection via tests.

]]>

```
  </Insert>
</File>

<!-- 4) README.md: add What's New + quickstart for TerrainSpike and env var note -->
<File path="README.md" intent="Document v0.0.8 and Workstream T3 in README" create_if_missing="false">
  <!-- Version badge / heading nudge (idempotent) -->
  <Upsert>
```

<![CDATA[
s#(\#\s*vulkan-forge(?:.*\n)*)#\1#g
]]>

```
  </Upsert>

  <!-- What's New section -->
  <Insert anchor="^## What's new in v0\.0\.8" position="before" only_if_not_exists="^## What's new in v0\.0\.8">
```

<![CDATA[
## What's new in v0.0.8 — Workstream T3: Terrain Shaders & Pipeline

- New `TerrainPipeline` (`src/terrain/pipeline.rs`) with three bind groups:
  1) **Globals UBO**, 2) **Height** `R32Float` + **NonFiltering** sampler, 3) **Colormap LUT** + Filtering sampler.
- sRGB color target by default (`Rgba8UnormSrgb`); force UNORM with `VF_FORCE_LUT_UNORM=1`.
- Python-facing **TerrainSpike** for offscreen terrain rendering (no depth), PNG readback.
- Exact `[x, z, u, v]` grid vertex layout and local rationale for R32Float non-filtering sampler.
- Tests for uniform layout (176 bytes) and WGPU clip-space projection.

> See full details in **CHANGELOG.md** under `0.0.8`.
]]>

```
  </Insert>

  <!-- Quickstart usage snippet -->
  <Insert anchor="^## Quickstart" position="after" only_if_not_exists="^### TerrainSpike example">
```

<![CDATA[
### TerrainSpike example

```python
from _vulkan_forge import TerrainSpike

ts = TerrainSpike(800, 600, grid=128, colormap="viridis")
ts.set_camera_look_at(
    eye=(3.0, 2.0, 3.0),
    target=(0.0, 0.0, 0.0),
    up=(0.0, 1.0, 0.0),
    fovy_deg=45.0,
    znear=0.1,
    zfar=100.0,
)
ts.render_png("terrain.png")
print("LUT format:", ts.debug_lut_format())
```

**Environment override:** to force UNORM LUT upload (CPU linearized), set:
```bash
export VF_FORCE_LUT_UNORM=1
```

**Supported colormaps:** `viridis`, `magma`, `terrain`.
```
]]>

```
  </Insert>

  <!-- Link to changelog for discoverability -->
  <Insert anchor="^## Changelog" position="before" only_if_not_exists="^## Changelog">
```

<![CDATA[
## Changelog
See **CHANGELOG.md** for a detailed list of changes. Latest release: **v0.0.8**.
]]>

```
  </Insert>
</File>
```

  </Edits>

  <Commands shell="bash">
    <Run>set -euo pipefail</Run>
    <!-- Sanity checks -->
    <Run>rg -n '^\[package\]' Cargo.toml && rg -n '^version\s*=\s*".*"' Cargo.toml || true</Run>
    <Run>rg -n '^## \[0\.0\.8\]' CHANGELOG.md || true</Run>
    <Run>rg -n '^## What'\''s new in v0\.0\.8' README.md || true</Run>
    <Run>rg -n 'VF_FORCE_LUT_UNORM' README.md || true</Run>
    <Run>rg -n 'TerrainSpike' README.md || true</Run>
    <!-- Show pending changes -->
    <Run>git status --porcelain || true</Run>
    <Run>CHANGED=$(git status --porcelain | awk '{print $2}'); if [ -n "$CHANGED" ]; then for f in $CHANGED; do echo "### DIFF: $f"; git --no-pager diff --unified=3 -- $f; done; fi || true</Run>
  </Commands>

  <Acceptance>
    <Criterion>`Cargo.toml` package `version` is `0.0.8`.</Criterion>
    <Criterion>`CHANGELOG.md` contains a `## [0.0.8] — 2025-08-16` section with **Added/Changed/Fixed** bullets describing T3.</Criterion>
    <Criterion>`README.md` has a “What’s new in v0.0.8 — Workstream T3” section, a **TerrainSpike** usage example, and mentions `VF_FORCE_LUT_UNORM` and supported colormaps.</Criterion>
    <Criterion>Edits are idempotent (re-running produces no further diffs).</Criterion>
  </Acceptance>
</Task>
