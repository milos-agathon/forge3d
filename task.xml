<Task id="T52-postpass" owner="Claude" goal="Fix build trait import and finalize timing harness export/CLI/stubs without changing public API semantics">
  <Context>
    Implemented T5.2 timing harness (python/vulkan_forge/bench.py) with Python API (run_benchmark), CLI (vf-bench), and tests.
    Fix a compile error in src/scene/mod.rs by restoring the trait import that provides `.shape()`.
    Ensure the curated packaging surface re-exports run_benchmark, updates type stubs, and keeps CLI mapping idempotent.
  </Context>

  <Edits>

    <!-- 1) Rust compile fix: bring trait providing `.shape()` into scope -->
    <File path="src/scene/mod.rs" intent="Add missing numpy trait import (idempotent)">
      <RegexReplace pattern="(?m)^use numpy::IntoPyArray;\s*$" multiple="false"><![CDATA[use numpy::IntoPyArray;
use numpy::PyUntypedArrayMethods;  // needed for .shape() on Py(Readonly)Array
]]></RegexReplace>
      <!-- If the previous line layout differs, also ensure the trait exists once -->
      <AppendIfMissing needle="use numpy::PyUntypedArrayMethods;">
<![CDATA[use numpy::PyUntypedArrayMethods;  // needed for .shape() on Py(Readonly)Array
]]>
      </AppendIfMissing>
    </File>

    <!-- 2) Python packaging: re-export run_benchmark safely without leaking internals -->
    <File path="python/vulkan_forge/__init__.py" intent="Idempotent bench export and __all__ update">
      <Upsert>
<![CDATA[
# T52-BEGIN:bench-export
# Import lazily and safely so packaging/import errors don't break base module import
try:
    from .bench import run_benchmark as _vf_run_benchmark
except Exception as _e:  # pragma: no cover
    def _vf_run_benchmark(*_args, **_kwargs):
        raise RuntimeError("vulkan_forge.bench unavailable: " + str(_e))

# Ensure curated __all__ includes 'run_benchmark' without leaking internals
try:
    __all__  # type: ignore[name-defined]
except NameError:
    __all__ = []
if "run_benchmark" not in __all__:
    __all__.append("run_benchmark")

# Public alias
run_benchmark = _vf_run_benchmark
# T52-END:bench-export
]]>
      </Upsert>
    </File>

    <!-- 3) Type stubs: add run_benchmark to the package .pyi (idempotent) -->
    <File path="python/vulkan_forge/__init__.pyi" intent="Expose bench signature in stubs (idempotent)">
      <AppendIfMissing needle="def run_benchmark(">
<![CDATA[
from typing import Any, Dict, Literal

def run_benchmark(
    op: Literal["renderer_rgba","renderer_png","scene_rgba","numpy_to_png","png_to_numpy"],
    width: int,
    height: int,
    *,
    iterations: int = ...,
    warmup: int = ...,
    grid: int = ...,
    colormap: str = ...,
    seed: int = ...,
) -> Dict[str, Any]: ...
]]>
      </AppendIfMissing>
    </File>

    <!-- 4) CLI wiring: ensure console script exists and is correct -->
    <File path="pyproject.toml" intent="Make sure vf-bench console script is present (idempotent)">
      <AppendIfMissing needle="[project.scripts]">
<![CDATA[
[project.scripts]
vf-bench = "vulkan_forge.bench:main"
]]>
      </AppendIfMissing>
      <RegexReplace pattern="(?m)^\[project\.scripts\]\s*(?:\r?\n)(?:.*\r?\n)*?(?=(?:\[\w)|\Z)" multiple="false"><![CDATA[
[project.scripts]
vf-bench = "vulkan_forge.bench:main"
]]></RegexReplace>
    </File>

  </Edits>

  <Commands shell="bash">
    <Run>python -m pip install -U pip maturin pytest numpy</Run>
    <Run>maturin develop --release</Run>
    <Run>pytest -q -k test_t52_timing_harness || true</Run>
    <Run>pytest -q</Run>
    <Run>python -c "import vulkan_forge as vf, json; print('has_run_benchmark', callable(getattr(vf, 'run_benchmark', None)))"</Run>
    <Run>vf-bench --op numpy_to_png --width 16 --height 16 --iterations 3 --warmup 1 --json bench_smoke.json</Run>
    <Run>test -f bench_smoke.json && python -c "import json; d=json.load(open('bench_smoke.json')); print(sorted(d['stats'].keys()), sorted(d['throughput'].keys()))"</Run>

    <Run>
<![CDATA[
# Show changed files and diffs
git status --porcelain || true
CHANGED=$(git status --porcelain | awk '{print $2}')
if [ -n "$CHANGED" ]; then
  for f in $CHANGED; do
    echo "### DIFF: $f"
    git --no-pager diff --unified=3 -- "$f" | sed -n '1,200p'
    echo
  done
else
  echo "No changes required"
fi
]]>
    </Run>
  </Commands>

  <Acceptance>
    <Criterion>Cargo/maturin build succeeds (no E0599); the numpy trait import is present in src/scene/mod.rs.</Criterion>
    <Criterion>`vulkan_forge.run_benchmark` is importable and listed in `vulkan_forge.__all__` without exposing `_vulkan_forge`.</Criterion>
    <Criterion>`vf-bench` runs and produces JSON with keys `stats.min_ms/p50_ms/mean_ms/p95_ms/max_ms/std_ms` and `throughput.fps/mpix_per_s`.</Criterion>
    <Criterion>All tests (including test_t52_timing_harness.py) pass.</Criterion>
    <Criterion>Edits are idempotent and limited to the files above.</Criterion>
  </Acceptance>
</Task>
