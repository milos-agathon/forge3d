<task>
  <title>T4.1 Scene — polish alignment math & remove unused import (NFC)</title>

  <context>
    <summary>
      Your latest Scene implementation passes tests and correctly fixes the 256-byte row alignment for R32F uploads. To make the code future-proof and a bit cleaner, let’s (1) replace hard-coded 256 math with the official WebGPU constant <code>wgpu::COPY_BYTES_PER_ROW_ALIGNMENT</code> in both places, and (2) drop an unused import. These are no-functional-change (NFC) edits that keep behavior identical while improving clarity and portability.
    </summary>
  </context>

  <objectives>
    <objective>Use <code>wgpu::COPY_BYTES_PER_ROW_ALIGNMENT</code> instead of literal 256 in both R32F upload paths.</objective>
    <objective>Remove the unused <code>use numpy::PyUntypedArrayMethods;</code> import from <code>src/scene/mod.rs</code>.</objective>
  </objectives>

  <edits>
    <patch file="src/scene/mod.rs" lang="diff"><![CDATA[
*** a/src/scene/mod.rs
--- b/src/scene/mod.rs
@@
-#![allow(dead_code)]
-use pyo3::prelude::*;
-use wgpu::util::DeviceExt;
-use numpy::PyUntypedArrayMethods;
+#![allow(dead_code)]
+use pyo3::prelude::*;
+use wgpu::util::DeviceExt;
@@
-            // Row padding to 256 bytes as required by wgpu for height>1.
-            let row_bytes = w * 4;
-            let padded_bpr = ((row_bytes + 255) / 256) * 256;
+            // Row padding to WebGPU's required alignment for height>1.
+            let row_bytes = w * 4;
+            let align = wgpu::COPY_BYTES_PER_ROW_ALIGNMENT;
+            let padded_bpr = ((row_bytes + align - 1) / align) * align;
@@
-        // WebGPU requires bytes_per_row to be 256-byte aligned when height > 1.
+        // WebGPU requires bytes_per_row to be COPY_BYTES_PER_ROW_ALIGNMENT aligned when height > 1.
         // Build a temporary padded buffer: each row (w*4 bytes) is copied into a padded stride.
-        let row_bytes = w * 4;
-        let padded_bpr = ((row_bytes + 255) / 256) * 256;
+        let row_bytes = w * 4;
+        let align = wgpu::COPY_BYTES_PER_ROW_ALIGNMENT;
+        let padded_bpr = ((row_bytes + align - 1) / align) * align;
*** End Patch
]]></patch>
  </edits>

  <validation>
    <steps>
      <step>Build: <code>maturin develop --release</code></step>
      <step>Run tests: <code>pytest -q</code></step>
      <expectation>All tests remain green; no behavior changes; no warnings about unused imports from <code>scene/mod.rs</code>.</expectation>
    </steps>
  </validation>

  <deliverables>
    <commit_message>T4.1 Scene (NFC): use COPY_BYTES_PER_ROW_ALIGNMENT instead of literal 256; remove unused numpy import.</commit_message>
  </deliverables>
</task>
