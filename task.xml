<task>
  <title>Remediate failed criteria only</title>
  <inputs>
    <repoRoot>.</repoRoot>
    <paths>
      <!-- Ensure tests live under tests/ -->
      <path>tests/test_c5_framegraph.py</path>
      <path>tests/test_c8_tonemap_pass.py</path>
    </paths>
  </inputs>
  <plan>
    <step id="s1">
      <desc>Create/ensure tests/ directory and place WS-C tests under tests/*.py (do not delete existing files; copy/move as needed).</desc>
      <cmd>mkdir -p tests</cmd>
    </step>

    <step id="s2">
      <desc>Fix C5 test to assert booleans are True (not just present/non-None).</desc>
      <edit file="tests/test_c5_framegraph.py">
        Replace:
          assert rpt.get('alias_reuse') is not None
        With:
          assert rpt.get('alias_reuse') is True
        Replace:
          assert rpt.get('barrier_ok') is not None
        With:
          assert rpt.get('barrier_ok') is True
      </edit>
    </step>

    <step id="s3">
      <desc>Implement C8 exposure monotonicity properly by testing monotone increase across multiple exposure factors on the rendered image (no engine API changes).</desc>
      <edit file="tests/test_c8_tonemap_pass.py">
        <!-- Keep the existing ΔE ≤ 1.5 check intact. Update the monotonicity test: -->
        Replace the body of test_c8_exposure_monotonicity() with code that:
          - Renders a single RGBA image via forge3d.Renderer.
          - Converts its RGB to linear (inverse sRGB gamma).
          - For exposure factors [0.125, 0.25, 0.5, 1.0, 2.0, 4.0], scales the linear RGB by the factor,
            re-encodes to sRGB, and records mean brightness.
          - Asserts the sequence of means is non-decreasing: m[i] <= m[i+1] for all i.
      </edit>
    </step>
  </plan>

  <deliverables>
    <item>tests/test_c5_framegraph.py with explicit True assertions for alias_reuse and barrier_ok.</item>
    <item>tests/test_c8_tonemap_pass.py with a real exposure monotonicity test over ≥5 exposure factors.</item>
    <item>All WS-C tests located under tests/*.py.</item>
  </deliverables>

  <acceptanceCriteria>
    <criterion>C5 test fails if alias_reuse != True or barrier_ok != True (asserts on booleans, not existence).</criterion>
    <criterion>C8: ΔE check remains ≤ 1.5 vs reference (existing), AND exposure monotonicity test asserts non-decreasing mean brightness for exposures [0.125..4.0].</criterion>
    <criterion>Repository contains tests at paths matching tests/test_*.py for WS-C.</criterion>
  </acceptanceCriteria>

  <safety>
    <branch>wsC-test-remediation</branch>
    <commits>Small, focused commits per step (s1..s3).</commits>
    <exclusions>Do not touch src/ or engine code; do not modify non-WS-C tests; exclude build artifacts (target/, .maturin/).</exclusions>
    <noBlindSearchReplace>true</noBlindSearchReplace>
  </safety>

  <constraints>
    <platform>Python-based tests only (.py); no .rs tests.</platform>
    <tools>pytest; no GPU runtime changes required for this remediation.</tools>
  </constraints>

  <completion>
    <summary>All WS-C Python tests live under tests/, C5 asserts booleans, and C8 has a proper exposure monotonicity test.</summary>
    <verify>
      <cmd>pytest -q</cmd>
      <cmd>python -c "import forge3d; print('import ok')"</cmd>
      <cmd>ls tests/test_c5_framegraph.py tests/test_c8_tonemap_pass.py</cmd>
    </verify>
  </completion>
</task>
