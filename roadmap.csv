Workstream ID,Workstream Title,Task ID,Task Title,Rationale,Deliverables,Acceptance Criteria,Priority,Phase,Missing Features,Dependencies,Risks/Mitigations,Unnamed: 12
A,Headless & Determinism,A1,Repository + build sanity,Ensure every dev can build/run starter consistently,maturin develop --release works on macOS/Linux/Windows; toolchains documented,Running `python -m examples.triangle` produces triangle.png; versions pinned,High,MVP,No,None,Toolchain drift → pin Rust/pyo3/wgpu minors,
A,Headless & Determinism,A2,Deterministic render pipeline setup,Eliminate non-determinism in baseline pipeline,No MSAA; fixed clear color/viewport/scissor; sRGB target,Repeated runs yield identical PNG bytes (hash match),High,MVP,No,A1,Driver variability → lock formats and state,
A,Headless & Determinism,A3,Shader & geometry determinism,Stabilize exact fragment coverage,Canonical triangle (no uniforms); linear interpolation,Edge pixels stable across runs,High,MVP,No,A2,"Degenerate edges → use CCW, cull back face",
A,Headless & Determinism,A4,Minimal Python API (spike),Expose minimal API for spike,"Renderer(width,height); render_triangle_rgba(); render_triangle_png(path); info(); type hints/docstrings",`help()` shows clear signatures,High,MVP,No,C1,Interface creep → keep spike surface tiny,
A,Headless & Determinism,A5,Determinism harness,Automate bitwise/quality checks and backend toggling,SHA-256 equality; SSIM≥0.999 fallback; honor WGPU_BACKEND,Two runs equal hashes; cross-backend SSIM≥0.999,High,MVP,No,A2,Backend differences → tolerate via SSIM,
A,Headless & Determinism,A6,Cross-backend runners,Exercise Metal/Vulkan/DX12 explicitly,Script(s) to force backend and run harness,All available backends on host pass criteria,Medium,MVP,No,A5,Unsupported backend → skip with clear message,
B,Terrain Pipeline,B1,Public API & validation,Define MVP Python→Rust contract for DEMs,"add_terrain(heightmap, spacing, exaggeration, colormap)",Invalid dtype/shape raises clear PyRuntimeError,High,MVP,No,C1,Strided arrays → require C-contig or copy once,
B,Terrain Pipeline,B10,PNG & NumPy outputs,Parity with spike outputs,"render_rgba()->np.uint8[H,W,4]; render_png(path); reuse readback buffer",1024² outputs correct shapes/dtypes,High,MVP,No,B9,Copy overhead → persistent buffer reuse,
B,Terrain Pipeline,B11,Tiled DEM pyramid & cache,Move from single tile to map-scale terrain,Quad-tree tiler; per-tile indexed grids; LRU tile cache,Streams a 16k×16k synthetic DEM without stalls; cache hits logged,High,Beyond MVP,No,"B3,B4,B9",Cache thrash → prefetch based on camera motion,
B,Terrain Pipeline,B12,Screen-space error LOD + frustum culling,Keep triangles per pixel roughly constant,SSE metric; per-tile LOD selection; cull outside frustum,Stable seams; triangle count scales with zoom; perf improves vs fixed LOD,High,Beyond MVP,No,B11,LOD popping → cross-fade or geom morph later,
B,Terrain Pipeline,B13,Slope/aspect derived maps,Enable analytic styling and overlays,CPU prepass to compute slope & aspect per tile; expose uniforms for styling,Visual check: slopes/aspects match analytic expectations on synthetic hills,High,Beyond MVP,No,B11,Numeric noise → smoothing kernel optional,
B,Terrain Pipeline,B14,Contour line generation overlay,Classic cartographic overlay for DEMs,CPU iso-line extraction per tile; draw via AA lines pipeline,Contours match CPU reference within tolerance; togglable levels,High,Beyond MVP,No,"B11,H8",Busy visuals → level spacing presets,
B,Terrain Pipeline,B15,Memory governor (≤512 MiB host-visible),Honor host-visible budget while streaming terrain,Soft cap with eviction; counters visible via metrics,Sustained runs never exceed cap; no hitches during eviction,High,Beyond MVP,No,"M5,B11",Eviction churn → hysteresis thresholds,
B,Terrain Pipeline,B16,Terrain FS lighting: point & spot (Lambert + optional specular),Extend terrain shading beyond directional sun to support point and spot lights with cosine-based cone and optional Blinn-Phong specular.,"FS computes surfaceToLightDirection = normalize(light.position - worldPos). Point falloff: optional inverse-square with range clamp. Spot: inLight = smoothstep(cosOuter, cosInner, dot(surfaceToLightDirection, -light.direction)); diffuse += inLight * max(dot(normal, surfaceToLightDirection), 0). Optional specular via half-vector and shininess uniform. Add per-light enable flags; accumulate up to N lights; clamp to linear workflow (pre-tonemap).","Golden tests: (1) single point light centered, (2) spotlight with inner/outer cones. Visuals match CPU reference renders within SSIM ≥ 0.99; no NaNs when cones degenerate (guarded).",High,Beyond MVP,No,"B6,B7,B8,D3,C8",Low; test with goldens,
B,Terrain Pipeline,B2,DEM stats & normalization,Provide sensible default ranges,Compute h_min/h_max (optionally pct clamp); set_height_range(),Overrides affect render,Medium,MVP,No,B1,Outliers → percentile clamp option,
B,Terrain Pipeline,B3,Grid index/vertex generator,"Reusable indexed grid for any (W, H)","terrain/mesh.rs::make_grid; pos.xy world; uv [0,1]; u16/u32 indices",1024² grid ≤~40ms; CCW winding tests,High,MVP,No,B1,Index overflow → switch to u32 automatically,
B,Terrain Pipeline,B4,Height texture upload (R32Float),Upload DEM as single-channel float texture,Texture2D R32Float; COPY_DST; row alignment; linear clamp sampler,Validation clean across backends,High,MVP,No,B1,Alignment bugs → assert 256B stride,
B,Terrain Pipeline,B5,Colormap LUT texture,Map heights to colors via small LUT,256×1 RGBA8UnormSrgb; built-in palettes; uniforms h_min/h_max,CPU reference maps match expected colors,Medium,MVP,No,B2,sRGB mismatch → compare in linear space,
B,Terrain Pipeline,B6,Terrain WGSL (vertex),Reconstruct world Z in VS from height texture,VS uses uv→height; set @builtin(position)=proj*view*world,Compiles; coordinates consistent with camera,High,MVP,No,"D1,B3,B4",Coord mismatch → doc conventions,
B,Terrain Pipeline,B7,Terrain WGSL (fragment),Compute normals + shade,"Forward-diff normals using dx,dy; Lambert+ambient; LUT then tonemap",Sun from east lights east slopes; normal flips with sun_dir,High,MVP,No,"B4,B5,D2",Aliasing → sampleLevel 0 and clamp,
B,Terrain Pipeline,B8,Pipeline state & bindings,Create render pipeline & bind groups,BG0: Globals; BG1: height+sampler; BG2: colormap+sampler; MSAA=1,Validation layers clean; triangle sample still renders,High,MVP,No,"D1,B4,B5",Layout drift → freeze layouts,
B,Terrain Pipeline,B9,Scene integration,Hook terrain into render path,Scene with Layer::Terrain; per-frame update Globals; record draw,First DEM image produced,High,MVP,No,B6–B8,State lifetime → single encoder per frame,
C,Core Engine & Target,C1,Engine layout & error type,Create module structure and single error type,"src/context.rs; src/core/{framegraph.rs,gpu_types.rs}; src/error.rs; rewire lib.rs",Compiles; Renderer.info() uses new context; unit tests build,High,MVP,No,None,"API churn → keep small, cohesive error type",
C,Core Engine & Target,C2,Off-screen target & readback path (merged),Standardize target and readback,`core/target.rs` (Rgba8UnormSrgb) + row-padding helper,512×512 triangle identical pre/post; correct PNG round-trip,High,MVP,No,C1,Row padding errors → unit test synthetic rows,
C,Core Engine & Target,C3,Device diagnostics & feature gating (merged),Deterministic device info and safe limits,Renderer.report_device(); DeviceCaps (limits/MSAA),Reports match backend; MSAA off if unsupported,Medium,MVP,No,C1,Unknown adapters → print caps & guidance,
C,Core Engine & Target,C4,Color management & tonemap stub,Linear workflow w/ sRGB output + simple tonemap,WGSL reinhard + gamma 2.2; doc format choices,Shader compiles; CPU ref values match,Medium,MVP,No,C2,Gamma mismatch → unit tests on functions,
C,Core Engine & Target,C5,Frame graph with transient aliasing,Deterministic pass orchestration and VRAM reuse before scaling scenes,core/framegraph.rs (nodes/resources/edges); barrier planner; transient attachment aliasing; debug dumps,3-pass toy pipeline aliases at least 2 color targets; peak device memory reduced ≥20%; zero validation errors,High,Beyond MVP,No,"C1,C2,C3",Barrier ordering mistakes → validate with small graphs; add debug checks,
C,Core Engine & Target,C6,Multi-thread command recording (task-based),Reduce CPU encode time via parallel CB recording and merge,Thread-safe command buffer pools; task graph to record passes in parallel; merge & submit,≥1.3× faster encode on geometry-heavy scenes vs single-thread; identical output,High,Beyond MVP,No,"C1,C5",Race conditions → per-thread allocators; validation layers on in debug,
C,Core Engine & Target,C7,Async compute prepasses with timeline semaphores,Overlap compute (DEM normals/histogram) with graphics while staying deterministic,Compute pipelines for normals/histogram; timeline semaphores; queue detection & scheduler,"On supported adapters, compute overlaps ≥20% of its wall time (GPU timestamps); identical frames",High,Beyond MVP,No,"C5,C6",Not all devices expose async compute → detect and fall back to graphics queue,
C,Core Engine & Target,C8,Linear→tonemap→sRGB pipeline (full),Consistent colorimetry across backends; move beyond stub,post/tonemap.wgsl (Reinhard + gamma 2.2); Renderer.set_exposure(); full-screen triangle pass,No double-gamma; grayscale ramp matches reference within small Δ; cross-backend SSIM ≥0.98,High,Beyond MVP,No,C4,Gamma mismatches → lock Rgba8UnormSrgb target; add histogram checks,
D,Camera & Uniforms,D1,Camera math + uniform buffer,Provide view/proj and common globals,"core/camera.rs; Globals UBO (view,proj,sun_dir,exposure,spacing,h_range,exaggeration)",Known-case matrices pass unit tests,High,MVP,No,C1,Handedness confusion → decision doc,
D,Camera & Uniforms,D2,Sun direction & tonemap helpers,Basic lighting helpers,"set_sun(elev,azim); WGSL reinhard+gamma",Shader test vectors ~= CPU ref,Medium,MVP,No,D1,Precision diffs → epsilon bounds,
D,Camera & Uniforms,D3,"Light array uniforms (directional, point, spot)","Add a unified light struct + small fixed-size array to support directional, point, and spot lights per WebGPU Fundamentals.",WGSL/host struct Light { kind:u32; pad:u32; color:vec3<f32>; intensity:f32; position:vec3<f32>; range:f32; direction:vec3<f32>; cosInner:f32; cosOuter:f32; }; Globals gains lights[MAX_LIGHTS=8] and lightCount. Provide Python API: Renderer.set_lights(lights=[...]) with validation and default values. Respect WGSL alignment (16-byte) and update PyO3 packing.,"Set 1 directional, 1 point, 1 spot via Python → uniform buffer updates without validation errors. Dumped uniform bytes match expected layout; device validation layers clean.",High,Beyond MVP,No,"D1,D2",Low; test with goldens,
E,Docs & Examples,E1,Terrain example script,Show end-to-end DEM usage,examples/terrain_single_tile.py; README usage/perf notes,New dev reproduces in <10 minutes,Medium,MVP,No,B10,Doc drift → keep examples in CI,
E,Docs & Examples,E2,Basemap vectors example,Show polygons+lines+points together with terrain,python/examples/basemap.py; outputs PNG and metrics,Runs after build; produces expected PNG; metrics printed,High,Beyond MVP,No,"H2,B9",Dependency creep → synthetic data only,
E,Docs & Examples,E3,Graph snapshot example,"Demonstrate N≈50k, M≈100k graph snapshot",python/examples/graph_snapshot.py; deterministic seed; metrics,Runs <60 s on mid-range GPU; PNG saved,High,Beyond MVP,No,"H11,H13",Long runtimes → parameterized sizes,
E,Docs & Examples,E4,Turntable video helper (ffmpeg),Simple camera orbit video generation,vulkan_forge.video.turntable(); console_script entrypoint,Outputs MP4 when ffmpeg present; helpful error if missing,High,Beyond MVP,No,C4,External tool presence → clear install hints,
F,Wheels & Release,F1,Pin toolchains & metadata,Reproducible builds,rust-toolchain.toml; pyo3 abi3-py310; wgpu 0.19.x; requires-python>=3.10,`maturin develop --release` succeeds on all OSes,High,MVP,No,C1,Tool updates break ABI → nightly canary,
F,Wheels & Release,F10,Docs & badges,Make build status/docs obvious,Badges; instructions to install wheel artifacts,Badges render; steps copy-pasteable,Low,Beyond MVP,No,F3,Stale badges → update slugs,
F,Wheels & Release,F11,Size/perf budget for wheels,Keep wheel sizes reasonable,release profile LTO/thin; strip; print sizes,Typical wheel <10MB; warn if >30MB,Low,Beyond MVP,No,F3,Large deps → audit static links,
F,Wheels & Release,F2,Matrix design & caching,Define CI matrix and caches,Ubuntu/Win/macOS runners; rust/pip caches,Subsequent runs faster; caches used,Medium,MVP,No,F1,Cache poisoning → key by lockfiles,
F,Wheels & Release,F3,CI workflow skeleton,Build wheels + smoke test + artifacts,Actions YAML; import wheel; headless render; upload wheels,All jobs green; artifacts present,High,MVP,No,F2,Adapter issues → prefer software adapter,
F,Wheels & Release,F4,Fallback adapter option,Improve CI reliability on headless,force_fallback_adapter via env; Renderer.info() prints adapter,Linux uses Lavapipe/SwiftShader when needed,High,MVP,No,C1,False negatives → try HW then SW,
F,Wheels & Release,F5,Wheel compliance checks,Ensure wheel metadata/compliance,auditwheel/delocate; twine check,All checks pass,Medium,MVP,No,F3,Missing deps → fail early,
F,Wheels & Release,F6,sdist build & check,Source distribution works,maturin sdist; twine check; local install smoke,Local sdist install renders image,Medium,MVP,No,F3,Missing sources → verify tarball contents,
F,Wheels & Release,F7,TestPyPI publish (manual),Push wheels to TestPyPI,workflow_dispatch job; gh-action-pypi-publish,Install from TestPyPI succeeds,Low,Beyond MVP,No,"F5,F6",Creds/setup → use Trusted Publishing,
F,Wheels & Release,F8,Release pipeline to PyPI,Tag-based release,"release.yml on tags; rebuild, check, publish",Tagging publishes successfully,Medium,Beyond MVP,No,"F5,F6",Release mistakes → dry-run to TestPyPI first,
F,Wheels & Release,F9,Nightly canary build,Catch dependency regressions,cron nightly; build + smoke + determinism badge,Nightly job runs with notifications,Low,Beyond MVP,No,F3,Noise → badge + notifications only,
G,Perf & Diagnostics,G1,Synthetic DEM goldens,Deterministic small-input correctness,64×64 gradient + Gaussian goldens; SSIM tests,SSIM≥0.99 across backends,High,MVP,No,B10,Backend variance → tolerance via SSIM,
G,Perf & Diagnostics,G2,Timing harness,Track GPU encode/submit/map times,render_metrics() summary,1024²: render ≤~50ms; readback ≤~30–60ms on mainstream GPU,Medium,MVP,No,B10,CI noise → allow slack,
G,Perf & Diagnostics,G3,Tracy zones + adapter/limits overlay,Make performance issues visible early,Tracy integration (CPU + optional GPU); Renderer.report_environment() JSON,Tracy shows zones for encode/draw/readback; JSON includes adapter/backend/limits,High,Beyond MVP,No,"G2,C3",Overhead in debug only → compile-time flag,
G,Perf & Diagnostics,G4,GPU timestamp queries per pass,Attribute GPU time to each pass for regressions,Timestamp query pool; encode begin/end stamps around passes; metrics surfaced,Per-pass gpu_ms reported; stable within ±10% run-to-run,High,Beyond MVP,No,C5,Unsupported on some backends → feature gate & fall back to CPU,
G,Perf & Diagnostics,G5,Cross-backend SSIM CI gate,Ensure visual determinism within tolerance across Vulkan/Metal/DX12,CI job renders 3 scenes; compare to macOS goldens; upload diffs on failure,SSIM ≥0.98 across supported runners; artifacts available on failure,High,Beyond MVP,No,"E1,G1",Driver drift → keep tolerance & regenerate goldens script,
G,Perf & Diagnostics,G6,Bug template & env dump,Actionable bug reports from users,report_environment() JSON saved next to outputs; GitHub issue template requests it,All example scripts emit env.json; template present in repo,High,Beyond MVP,No,G3,Privacy concerns → only non-sensitive system/adapter info,
G,Perf & Diagnostics,G7,Golden image tests for light types + SSIM gate,"Ensure determinism and correctness for directional, point, and spot lights across backends.","Add tests that render 3 scenes (directional key, point near surface, spot with soft edges) at 256x256. Store goldens + metadata (adapter/backend). Integrate SSIM ≥ 0.99 (unit) and ≥ 0.98 (cross-backend) into CI.","CI green on macOS (Metal) and Linux (Vulkan). On Windows (DX12), SSIM ≥ 0.98. Artifacts upload diffs on failure; logs print light counts and parameters.",High,Beyond MVP,No,"C8,B16",Low; test with goldens,
H,Vector & Graph Layers,H1,Public API definition (vectors),Freeze Python surface for vectors/graphs,add_polygons/lines/points/graph signatures; doc planar CRS,API imports clean; signatures in help(),Medium,Beyond MVP,No,C3,CRS mistakes → assert planar inputs,
H,Vector & Graph Layers,H10,Line batching & perf logging,Scale to many segments,Instance buffer for p0/p1 + color/width; log counts/times,For 1e5 segments build/draw logged; AA stable,Medium,Beyond MVP,No,H8,Huge inst buffers → split batches,
H,Vector & Graph Layers,H11,Points (instanced),Render many points with screen-space sizing,Instanced quads; size/color per-instance; FS SDF disc; batching,1e6 points maintain offline perf headroom; goldens pass,Medium,Beyond MVP,No,H8,Tiny sizes vanish → clamp min px,
H,Vector & Graph Layers,H12,Graph packing,Efficient static packing for graph snapshot,Node positions + edge index; optional per-node size/color,1e5 nodes / 2e5 edges pack < few hundred ms,Low,Beyond MVP,No,"H11,H8",Memory spike → log footprint,
H,Vector & Graph Layers,H13,Graph pipelines,Separate pipelines for edges/nodes,Reuse lines/points; draw order edges→nodes,Goldens for small graph; proper layering,Low,Beyond MVP,No,"H11,H10",Overdraw artifacts → enforce order,
H,Vector & Graph Layers,H14,Vector goldens & metrics,Deterministic baselines for vectors,Tiny goldens polygons/lines/points/graph; SSIM≥0.99; log counts/times,CI passes on Linux/macOS; artifacts uploaded,Low,Beyond MVP,No,H5–H13,Backend variance → SSIM tolerances,
H,Vector & Graph Layers,H15,README usage (vectors),Explain vector usage & constraints,Examples; CRS/batching/AA notes,Build succeeds; examples render; badges OK,Low,Beyond MVP,No,F3,Misuse of CRS → explicit docs,
H,Vector & Graph Layers,H16,Weighted blended OIT (feature-flag),Handle translucent overlays without per-pixel linked lists,OIT pass with weighted blended equations; toggle via feature flag,Translucent polygons/lines composite correctly without sorting; perf measured,High,Beyond MVP,No,"H2,H5",Visual tuning needed → provide weight parameters,
H,Vector & Graph Layers,H17,Indirect draws + CPU frustum culling,Reduce driver overhead for very large vector/graph scenes,Build indirect draw buffers per batch; frustum cull on CPU; draw via vkCmdDrawIndexedIndirect (when on Vulkan),Draw call count reduced ≥30% on large scenes; frame time improved measurably,High,Beyond MVP,No,"H4,H10",Platform variation → fall back to direct draws where not supported,
H,Vector & Graph Layers,H18,"Graph snapshot scale test (N=100k, M=200k)",Validate scalability of nodes/edges pipelines,Synthetic generator; stress run; metrics capture for build/upload/draw,≤600 ms headless @1080p on mid-range GPU; metrics logged,High,Beyond MVP,No,"H11,H13",Memory spikes → batch by visibility & instance buffer size,
H,Vector & Graph Layers,H2,Layer base & render order,Deterministic draw ordering,Layer enum + stable sort; debug labels,Deterministic order across frames,Low,Beyond MVP,No,H1,Overdraw confusion → document order,
H,Vector & Graph Layers,H3,Packed data contracts,Reuse packed formats to limit Python overhead,Polygons/Lines/Points packed buffers; validation errors precise,No extra FFI copies; validations pass,Medium,Beyond MVP,No,H1,Corrupt offsets → strict checks,
H,Vector & Graph Layers,H4,Bounds/batching/visibility,Keep draw calls reasonable,Per-layer & per-path AABBs; batch ~100k verts/draw; optional coarse culling,Large inputs split across draws; memory logged,Medium,Beyond MVP,No,H3,Overly large draws → split batches,
H,Vector & Graph Layers,H5,Polygon fill hardening,Robust fill with alpha,Straight-alpha blending; optional per-feature color,Donut renders correctly; no halos,Medium,Beyond MVP,No,H3,Seams → straight-alpha & order,
H,Vector & Graph Layers,H6,Polygon outline refinement,Clean outlines for exteriors/holes,Reuse stroke mesh; world-space width with px clamp,1px-equiv outline visible at all zooms,Low,Beyond MVP,No,H5,Cracks on tight angles → bevel where needed,
H,Vector & Graph Layers,H7,Polyline packing & validation,Stable line input paths,"pack_lines(paths) → (coords, offsets); reject <2pt paths",Unit tests for simple/L-shape/degenerate,Medium,Beyond MVP,No,H3,Duplicate verts → dedup consecutive,
H,Vector & Graph Layers,H8,Instanced segment expansion (AA lines),AA screen-space width via shader path,VS-expanded quads; miters with limit; FS smoothstep AA,Uniform 2px regardless of zoom; joints correct ≥30°,High,Beyond MVP,No,"H7,D1",Gaps at joins → bevel fallback,
H,Vector & Graph Layers,H9,Caps & joins variants,Expose basic join/cap options,cap: butt/square/round; join: miter/bevel; round cap via SDF,Options switch behavior; visual goldens,Low,Beyond MVP,No,H8,Miter spikes → clamp miter length,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I1,Single-struct uniforms,Add UBO example mirroring lesson,Uniform struct color/scale/offset; one BG per draw; aspect-correct scale,100 triangles render; deterministic PNG test,Low,Beyond MVP,Yes,C1,Bind churn → baseline for SSBO path,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I2,Many-object per-object UBOs,Show per-object UBO + BG loop,100 objects; compare cost vs instancing,Functional parity; perf notes recorded,Low,Beyond MVP,Yes,I1,BG overhead → documented trade-offs,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I3,Split uniforms across UBOs,Split static/dynamic UBOs,Update only dynamic per frame,Byte-accurate dynamic updates; frame time improves,Low,Beyond MVP,Yes,I2,Sync bugs → map/write fences,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I4,Storage buffer parity with uniforms,Replace UBOs with SSBOs,read-only storage buffers; same structs,Visual parity; microbench logs,Low,Beyond MVP,Yes,I1,Layout mismatch → align to WGSL rules,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I5,Instancing via AoS + instance_index,One draw with many instances,SSBO array-of-structs; instance_index drives per-instance params,100 instances via one draw; deterministic PNG,Medium,Beyond MVP,Yes,I4,Over/under indexing → bounds checks,
I,WebGPU Fundamentals (Uniforms/Storage/Instancing),I6,Split-buffers perf demo,Static vs dynamic SSBOs minimal-change demo,measure BG churn vs single BG,Perf deltas recorded,Low,Beyond MVP,Yes,I4,Noisy results → average over runs,
J,Presentation (Demo-only),J1,Canvas configure & presentation format,Tiny browser demo mirrors headless triangle,use getPreferredCanvasFormat(); present triangle,Demo runs; triangle parity,Low,Beyond MVP,Yes,None,Demo drift → tag as demo-only,
J,Presentation (Demo-only),J2,CSS-scaled canvas vs backing store,Document CSS vs width/height; keep backing store fixed for tests,notes + small demo page,Render correct with CSS scaling; headless unaffected,Low,Beyond MVP,Yes,J1,Confusion → explicit doc section,
K,Skybox & Depth,K1,Textured cube map (skybox),Add cube textures + sampler + view matrix removal for sky,Cube texture + sampler; VS/FS that ignore translation,Correct cube rendering; no seams; validated on headless,Low,Beyond MVP,Yes,"C4,D1",Edge seams → prefiltered mips,
K,Skybox & Depth,K2,Mip generation & sampling for cube,Generate mips and sample correctly,CPU or GPU-generated mips; sampling state verified,Mips visual parity checked,Low,Beyond MVP,Yes,K1,Wrong gamma → generate in linear,
K,Skybox & Depth,K3,ViewProjInv plumbing for skybox,Correct transform handling,add viewProjInv where needed; depth test config,Sky renders with depth settings,Low,Beyond MVP,Yes,K1,Matrix mistakes → unit tests,
K,Skybox & Depth,K4,Depth enablement & less-equal for sky,Depth test config for skybox draw,enable depth; set compare: less-equal,Sky remains visible; terrain still correct,Low,Beyond MVP,Yes,K1,Z-fighting → draw order & bias,
L,Textures & Samplers,L1,Textured quad baseline,Foundation for filtering/wrapping/mips,wgpu headless textured quad; queue.write_texture with padding; Python wrapper,Deterministic 512×512 PNG; validation clean,Low,Beyond MVP,Yes,C2,Stride bugs → assert bytes_per_row%256==0,
L,Textures & Samplers,L2,Palette arrays & runtime selection,Switch colormaps without pipeline rebuilds,1D palette texture array; uniform index selects palette,Runtime palette changes visible; no pipeline relink,High,Beyond MVP,No,B5,sRGB/linear confusion → document expectations,
L,Textures & Samplers,L3,Descriptor indexing (feature-gated),Avoid frequent rebinds for small texture/LUT sets,"If available, use descriptor indexing for palettes/materials; fallback to fixed bindings",Works on devices with the feature; graceful fallback elsewhere,High,Beyond MVP,No,"L2,C3",Feature availability → capability checks & code path split,
M,Interop & Memory,M1,Zero-copy NumPy interop (RGBA/height),Avoid extra copies across FFI,Borrowed PyArray for inputs/outputs; pointer-equality tests; docs,Pointer equality where possible; no extra memcpy in hot path,High,MVP,Yes,"C1,B10",Accidental copies → audit via profiler,
M,Interop & Memory,M2,Memory budget tracker ≤512 MiB,Enforce memory ceiling across textures/buffers,Resource registry that sums sizes; hard/soft limits; metrics,Fail fast when >512 MiB; metrics reported each render,High,MVP,Yes,"C1,B3–B5",Hidden allocations → conservative sizing,
M,Interop & Memory,M3,Staging upload ring (persistent mapped),Eliminate per-frame buffer creation and memcpy churn,Host-visible ring buffer with fences; suballocations for uploads; stats counters,No per-frame buffer creation in logs; smooth upload timings across 100 frames,High,Beyond MVP,No,M2,Ring wraparound bugs → add guard pages & asserts,
M,Interop & Memory,M4,Readback ring with row-padding helper,Deterministic offscreen readback at scale,Persistent readback buffer sized to padded rows; tested unpadding helper,512×512 and 4K readbacks return correct shapes/dtypes; SSIM vs PNG ≥0.99,High,Beyond MVP,No,C2,Stride mistakes → unit tests on synthetic stripes,
M,Interop & Memory,M5,Allocator policy: device-local vs host-visible with budget,Respect ≤512 MiB host-visible budget while maximizing device-local,VMA-backed allocations with tags; soft caps (host-visible ≤512MiB); JSON memory report,Host-visible stays ≤512MiB during stress test; device-local used for big geometry/DEM,High,Beyond MVP,No,"M2,M3",Fragmentation → defragment passes off-peak,
N,Advanced Rendering Systems,N1,PBR material pipeline,Implement Cook-Torrance BRDF with metallic/roughness workflow,shaders/pbr.wgsl with GGX distribution; material uniforms; Python API for materials,Metallic spheres match reference renderers within SSIM≥0.95; energy conservation validated,High,Beyond MVP,No,"C8,D1",Complex BRDF math → validate against reference implementations,
N,Advanced Rendering Systems,N2,Shadow mapping (cascaded),CSM with PCF filtering for large scenes,4-cascade shadow maps; PCF 3×3 kernel; bias uniforms; Python API,Shadows stable across cascade boundaries; no peter-panning; <10ms overhead @1080p,High,Beyond MVP,No,"B11,C5",Shadow acne → adaptive bias based on surface slope,
N,Advanced Rendering Systems,N3,HDR pipeline with tonemapping,ACES/Reinhard operators with exposure control,Rgba16Float internal format; ACES filmic curve; exposure/gamma controls,No banding; matches reference tonemapping within Δ<0.01; cross-backend consistent,High,Beyond MVP,No,C8,Precision loss → dither before quantization,
N,Advanced Rendering Systems,N4,Render bundles integration,Pre-encoded command sequences for static geometry,Bundle cache with invalidation; Python API for bundle hints; metrics,2-5× CPU encode speedup for static scenes; cache hit rate >90%,High,Beyond MVP,No,"C5,H4",Invalidation bugs → version tracking per bundle,
N,Advanced Rendering Systems,N5,Environment mapping/IBL,Cubemap support with roughness-based mip sampling,Cubemap loader; prefiltered env maps; BRDF LUT; irradiance probes,IBL matches reference within SSIM≥0.93; proper roughness→mip mapping,Medium,Beyond MVP,No,"N1,K1",Seam artifacts → seamless cubemap sampling,
O,Resource & Memory Management,O1,Staging buffer rings,Circular buffers for efficient CPU→GPU transfers,3-ring buffer with fences; automatic wrap; usage stats,Zero per-frame allocations; <2ms CPU overhead for 100MB transfers,High,Beyond MVP,No,M3,Fence stalls → triple buffering,
O,Resource & Memory Management,O2,GPU memory pools,Resource pooling with automatic lifetime management,Pool allocator with size buckets; reference counting; defrag strategy,50% reduction in allocation calls; <5% fragmentation after 1hr runtime,High,Beyond MVP,No,"M5,O1",Pool exhaustion → dynamic growth with limits,
O,Resource & Memory Management,O3,Compressed texture pipeline,BC/ETC/KTX2 support with format detection,Format detection; BC1-7 decoder; ETC2 support; KTX2 container loading,30-70% texture memory reduction; quality within PSNR>35dB of uncompressed,Medium,Beyond MVP,No,L1,Patent issues → use Basis Universal transcoder,
O,Resource & Memory Management,O4,Virtual texture streaming,Sparse texture support for massive datasets,Page table management; feedback buffer; tile cache; Python API,16k×16k terrain with <256MB resident; no visible popping,Low,Beyond MVP,No,"O3,B11",Complex implementation → start with simple tile streaming,
P,Testing & Validation,P1,Golden image framework,SSIM-based visual regression testing,pytest fixtures; SSIM computation; threshold config; baseline management,Detects 1px differences; SSIM≥0.98 cross-platform; regeneration script works,High,Beyond MVP,No,"G1,C8",Platform variance → per-backend baselines,
P,Testing & Validation,P2,Memory budget validation,Automated VRAM limit adherence testing,Memory tracking; stress tests; leak detection; CI integration,Detects leaks >1MB; validates ≤512MB host-visible; runs in CI,High,Beyond MVP,No,"M2,O2",False positives → proper cleanup between tests,
P,Testing & Validation,P3,Performance regression detection,Statistical analysis of frame times,Percentile tracking; k-means clustering; regression alerts; dashboard,Detects ≥5% regressions with 95% confidence; <1% false positive rate,Medium,Beyond MVP,No,"G4,P1",Noisy CI → dedicated perf runners,
P,Testing & Validation,P4,Cross-GPU test matrix,Comprehensive vendor/driver coverage,Test harness for NVIDIA/AMD/Intel/ARM; driver version tracking; skip lists,80% hardware coverage; graceful skips for unsupported features,Medium,Beyond MVP,No,"P1,F3",Expensive infrastructure → cloud GPU services,
Q,Production Features,Q1,Post-processing compute pipeline,"Bloom, DOF, SSAO effects",Compute shader framework; effect chain; temporal stability; Python API,60fps @1080p with 3 effects; matches reference quality,Medium,Beyond MVP,No,"C8,N3",Bandwidth limits → optimize render target formats,
Q,Production Features,Q2,LOD system implementation,Discrete and continuous LOD with imposters,Mesh simplification; LOD selection; imposter generation; streaming,50-90% triangle reduction; smooth transitions; <16ms LOD updates,High,Beyond MVP,No,"B12,O4",Popping artifacts → blend between LODs,
Q,Production Features,Q3,GPU profiling markers,Vendor tool integration for performance analysis,RenderDoc/NSight/RGP markers; timestamp queries; Python API,All major tools show markers; <1% overhead when enabled,High,Beyond MVP,No,"G3,G4",Tool version compatibility → test matrix,
Q,Production Features,Q4,Indirect draw support,GPU-driven rendering for massive batching,Indirect buffer generation; GPU culling; draw parameter computation,10× draw call reduction; works on 90% of target hardware,Low,Beyond MVP,No,"H17,C7",Limited support → feature detection and fallback,
R,Matplotlib & Array Interop,R1,Matplotlib colormap + Normalize support,Accept Matplotlib Colormap/Normalize objects to build LUTs and map data to [0,1] for terrain/overlays python/forge3d/adapters/mpl_cmap.py; support Colormap names/objects; Normalize/LogNorm/BoundaryNorm mapping; tests/test_mpl_cmap.py; docs/integration/matplotlib.md,"Given a test array, colors computed via adapter equal Matplotlib imshow (max abs channel diff ≤1/255); supports reversed colormaps (\*_r\""); API accepts `cmap` and `norm`""",High,MVP,Yes,B5;B2,API drift across Matplotlib versions → pin minimal version and unit-test names; color precision → compare in linear space,
R,Matplotlib & Array Interop,R2,Zero-copy NumPy ingestion (buffer protocol),Ingest C-contiguous float32/uint8 NumPy arrays without copying using buffer protocol/`__array_interface__`,python/forge3d/ingest/numpy_adapter.py; detection of C-contiguous arrays; fallback copy with warning; tests/test_numpy_zero_copy.py,"For C-contiguous arrays, `np.shares_memory(src, adapter.view)` is True and ingest time < 1 ms/MB; non-contiguous arrays trigger one-time copy with log",High,MVP,Yes,B1;B4,Unexpected copies → assert C-contig in hot paths and document; dtype mismatch → cast once on GPU upload,
R,Matplotlib & Array Interop,R3,Matplotlib normalization presets (Log/Power/Boundary),Parity with Matplotlib normalization classes to match common plotting workflows,Implement Normalize LogNorm PowerNorm BoundaryNorm equivalents; tests comparing normalized values to Matplotlib; docs,Normalized outputs for test vectors equal Matplotlib within 1e-7; boundary bin edges honored; clipping behavior matches,Medium,MVP,Yes,N1;B5,Numeric edge cases at 0 or negative values (LogNorm) → epsilon clamp and tests,
R,Matplotlib & Array Interop,R4,Matplotlib display helpers,Convenience to show forge3d RGBA buffers on Matplotlib axes with correct DPI/extent,python/forge3d/helpers/mpl_display.py; `imshow_rgba(axrgba        extent=None        dpi=None)`; docs; example notebook,Helper displays image with no aspect distortion; optional extent respected; example renders without errors,Low,Beyond MVP,Yes,B10;E1,Matplotlib backend variance → CI runs with Agg backend,
S,Raster IO & Streaming,S1,Rasterio windowed reads + block iterator,Stream DEM/imagery using rasterio windows and block_windows for large rasters,python/forge3d/adapters/rasterio_tiles.py; support read(window=Window(...) out_shape        resampling); iterator over blocks; example,"Given a large GeoTIFF, tiles are read without OOM; total pixel count read matches expected; resampling selectable",High,MVP,Yes,B1;B4,I/O bottlenecks → use rasterio block_windows and prefetch; verify alignment,
S,Raster IO & Streaming,S2,Nodata/mask → alpha propagation,Respect dataset nodata and masks by converting to alpha channel for overlays/terrain masking,Implement mask extraction via read_masks()/dataset.mask; integrate with RGBA; tests on datasets with nodata and alpha,Masked areas result in alpha=0; matches rasterio mask semantics; golden image tests,High,MVP,Yes,O1;B7,Differences between per-band and dataset masks → follow rasterio docs and add unit tests,
S,Raster IO & Streaming,S3,CRS normalization via WarpedVRT + pyproj,Normalize incoming rasters to a target grid/CRS using rasterio WarpedVRT and pyproj for transforms,python/forge3d/adapters/reproject.py; WarpedVRT wrapper; pyproj Transformer utilities; tests for EPSG:4326↔EPSG:3857,Reprojected window bounds/shape match expected; pixel center coordinate error < 0.5 pixel; performance within 50ms for 1024²,Medium,MVP,Yes,O1,Missing grid shift files → document PROJ data download; precision diffs → accept small tolerance,
S,Raster IO & Streaming,S4,xarray/rioxarray DataArray ingestion,Accept xarray.DataArray with rioxarray rio accessor,preserving CRS/transform and coords python/forge3d/ingest/xarray_adapter.py; support .rio.crs/.rio.transform; tests with sample DataArray; docs,DataArray with rio metadata ingests without copying; CRS preserved and logged; coordinates available for extents,High,MVP,Yes,B1;B4;O3,Inconsistent metadata → validate presence and raise clear error,
S,Raster IO & Streaming,S5,Dask-chunked raster ingestion,Support dask.array inputs to stream tiles lazily into GPU textures,python/forge3d/ingest/dask_adapter.py; chunk planning; backpressure; tests with synthetic dask arrays,Pipeline renders without materializing full array; memory remains under 1.5× tile size; chunks align with storage best practices,Medium,Beyond MVP,Yes,O1;O4,Chunk mismatch hurts performance → recommend chunk shapes per docs; add metrics,
S,Raster IO & Streaming,S6,Overview/LOD selection,Pick appropriate overview level based on viewport/resolution to reduce IO and improve speed,Implement overview selection using dataset.overviews(); tests measuring fewer bytes read when zoomed out,"When requesting 1/8 resolution, overview level chosen reduces bytes read by ≥60% vs full-res; visual SSIM≥0.99",Low,Beyond MVP,Yes,O1,Missing overviews → fall back to resampling; document trade-offs,
T,Vector IO & Geometry,T1,GeoDataFrame ingestion (points/lines/polygons),Load vector data from GeoPandas and map to forge3d primitives with style,python/forge3d/ingest/geopandas_adapter.py; geometry type routing; style schema (color width        height); tests,Example GeoDataFrame renders points/lines/polygons at expected locations; style parameters applied; CRS respected,High,MVP,Yes,D1;O3,Mixed geometry types and invalids → clean or skip with warnings; large features → simplify on ingest,
T,Vector IO & Geometry,T2,Fast vector I/O via pyogrio + bounding box filters,Speed up vector reads using pyogrio read_dataframe()/read_bounds with bbox/mask filters,python/forge3d/io/vector_io.py; bbox tiling; examples; benchmarks vs Fiona,Read time improves ≥2× vs Fiona on test dataset; bbox filtering reduces rows read by ≥80% when zoomed,Medium,MVP,Yes,P1,Driver/encoding quirks → fall back to Fiona; document limitations,
T,Vector IO & Geometry,T3,CRS transforms for vectors (pyproj),Transform vector coordinates to scene CRS using pyproj.Transformer,python/forge3d/geo/crs.py; caching of Transformer; tests EPSG:4326↔EPSG:3857 & UTM zones,Round-trip transforms within expected tolerance (<1e-6 degrees or <0.5m); performance benchmarked,High,MVP,Yes,P1;O3,Missing grid shift files → allow network-enabled PROJ or prompt user,
T,Vector IO & Geometry,T4,Polygon triangulation with holes (earcut),Triangulate polygons (with holes) from Shapely into meshes for extrusion/render,geometry/triangulate.rs using earcut; Python wrapper; tests with multipolygons and holes; docs,Polygons with holes render without self-intersections; triangle count consistent; golden images,High,MVP,Yes,P1,Complex rings ordering → validate outer/inner order; use robust earcut implementation,
T,Vector IO & Geometry,T5,Large vector batching & instancing,Batch draw of points/lines using instance buffers; chunk GeoDataFrame to keep memory bounded,Instancing path in renderer; python batching utilities; tests on 1M points synthetic dataset,1M points render within target frame time (<33ms) on mid-range GPU in headless mode; memory <1GB,Medium,Beyond MVP,Yes,P1,Upload stalls → stage in staging buffers and double-buffering; measure and tune,
U,Basemaps & Tiles,U1,XYZ/WMTS tile fetch + cache,Fetch web basemap tiles (Web Mercator) and cache locally; compose into texture for overlays,python/forge3d/tiles/client.py; cache dir; WMTS/XYZ support; attribution API; tests (mocked network),"Given a viewport, correct tile indices fetched and stitched; cache hits reduce network calls by ≥80% on repeat",Medium,Beyond MVP,Yes,O3;N4,Network variability → retries and offline cache; licensing → require attribution string,
U,Basemaps & Tiles,U2,Attribution overlay & extent management,Render required attribution text/logo and handle DPI/extent mapping for basemaps,Overlay renderer; position presets; tests ensuring visibility; docs on provider requirements,Attribution present in snapshot; position stable across resolutions; passes provider checklist,Low,Beyond MVP,Yes,Q1;N4,Provider policy changes → expose configurable templates,
U,Basemaps & Tiles,U3,Cartopy GeoAxes interop example,Example integrating forge3d snapshot/overlay with Cartopy GeoAxes and extents,examples/cartopy_overlay.py; docs/integration/cartopy.md,Example runs with Agg backend; GeoAxes shows correct extent and overlay alignment,Low,Beyond MVP,Yes,N4,Matplotlib backend differences → use Agg in CI,
V,Datashader Interop,V1,Datashader pipeline → RGBA overlay,Convert Datashader Canvas/shade outputs into forge3d overlay textures for large point/line rasters,python/forge3d/adapters/datashader_adapter.py; examples; tests on millions of points,Datashader RGBA arrays accepted without copy; overlay aligns with coordinates; example notebook renders,Medium,Beyond MVP,Yes,N2;O3,Coordinate mismatch → require extent inputs and validate; memory spikes → use dask-backed pipelines,
V,Datashader Interop,V2,Datashader performance stress & goldens,Set of stress tests + golden images to validate performance and correctness over zoom levels,tests/perf/test_datashader_zoom.py; goldens; CI job,SSIM≥0.98 across zooms; frame time within target; CI artifacts on regression,Low,Beyond MVP,Yes,R1;G7,Datashader version changes → pin and test against matrix,
W,Integration Docs & CI,W1,End-to-end notebooks for Python stack,Author notebooks demonstrating rasterio/xarray/geopandas/matplotlib/contextily/datashader → forge3d,notebooks/integration/*.ipynb; docs/integration/index.md; small sample datasets vendored or fetched in CI,All notebooks execute headless on CI (Agg); total runtime < 10 min; rendered PNGs uploaded as artifacts,Medium,MVP,Yes,E1;F3,Data access in CI → vendor tiny samples or mirror to public buckets with hashes,
W,Integration Docs & CI,W2,CI validation for I/O and CRS correctness,Automated tests for CRS transforms,windowed reads masks     and zero-copy paths        pytest suite under tests/integration; golden images; SSIM gates; memory ceilings,All tests green on Linux runner; SSIM thresholds met; memory below ceilings; logs include device+backend,High,MVP,Yes,O1;O2;O3;N2;P3,Backend variance → tolerate small SSIM drift; ensure deterministic seeds,