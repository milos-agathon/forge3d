<task id="ws-N6-python-harness" version="1.0">
  <title>Remediate failed criteria only</title>

  <role>You are Claude Code in Implementation Mode. Migrate the TBN bind validation test to Python and remove the Rust test from tests/.</role>

  <constraints>
    <platforms>win_amd64, linux_x86_64, macos_universal2</platforms>
    <gpuBudget>≤ 512 MiB host-visible heap</gpuBudget>
    <build>Python ≥3.9; pytest</build>
    <apis>wgpu-py (WebGPU/WGSL)</apis>
    <safety>
      - Create branch ws-N6-python-harness.
      - Small, focused commits.
      - Do not modify core library APIs.
      - Exclude binaries/build dirs from edits.
      - If wgpu is unavailable at runtime, skip the test with a clear reason (do not fail).
    </safety>
  </constraints>

  <inputs>
    <repoRoot>./</repoRoot>
    <paths>
      <tests>tests/</tests>
      <docs>docs/</docs>
    </paths>
    <scope>N6 only (Python test + remove Rust test from tests/)</scope>
  </inputs>

  <plan>
    1) Add Python test: tests/test_tbn_bind_validation.py
       - Use asyncio + wgpu-py to obtain a headless device (e.g., wgpu.utils.get_default_device()).
       - Push validation error scope: device.push_error_scope(wgpu.ErrorFilter.validation).
       - Define TBN vertex buffer layout (array_stride=56) with attributes:
         loc0 float32x3 @0, loc1 float32x2 @12, loc2 float32x3 @20, loc3 float32x3 @32, loc4 float32x3 @44.
       - Create minimal WGSL with a vertex stage consuming locations 0..4 and a fragment stage writing to rgba8unorm.
       - Create a render pipeline using that layout/shader.
       - Await device.pop_error_scope(); assert it is None; print "wgpu_validation=None".
       - If import or adapter/device acquisition fails, call pytest.skip with the reason.
    2) Test deps
       - Update/append tests/requirements.txt with: wgpu>=0.14, pytest, pytest-asyncio.
    3) Remove the Rust test from tests/
       - Delete or move tests/tbn_bind_validation.rs out of tests/ (e.g., to examples/wgpu_rs/ or docs/code/), ensuring `cargo test` will not pick it up.
    4) Update docs pointer
       - Edit docs/tbn.md “GPU Validation” section to reference tests/test_tbn_bind_validation.py (only path change).
  </plan>

  <deliverables>
    <file>tests/test_tbn_bind_validation.py</file>
    <file>tests/requirements.txt</file>
    <file>docs/tbn.md</file>
    <removed>tests/tbn_bind_validation.rs</removed>
  </deliverables>

  <acceptanceCriteria>
    <ac id="N6-PyHarness">
      Running <code>pytest -q tests/test_tbn_bind_validation.py::test_tbn_vertex_layout_binding</code>
      exits 0 and prints the line <code>wgpu_validation=None</code> to stdout.
    </ac>
    <ac id="N6-NoRustTests">No Rust test remains under the tests/ directory.</ac>
    <ac id="N6-DocsPointer">docs/tbn.md references tests/test_tbn_bind_validation.py under GPU Validation.</ac>
  </acceptanceCriteria>

  <runbook>
    <commands>
      - git checkout -b ws-N6-python-harness
      - pip install -r tests/requirements.txt
      - pytest -q tests/test_tbn_bind_validation.py::test_tbn_vertex_layout_binding
      - git ls-files tests/ | grep -E "tbn_bind_validation\\.rs" && echo "ERROR: Rust test still present" || echo "OK: no Rust test"
    </commands>
    <completion>
      Provide the pytest console output showing "wgpu_validation=None" and the passing test summary,
      plus a listing of tests/ confirming no .rs file remains.
    </completion>
  </runbook>
</task>
