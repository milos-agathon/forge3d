Workstream ID,Workstream Title,Task ID,Task Title,Readiness,Evidence Paths,Missing Pieces,Minimal Changes,Priority,Phase,Dependencies,Risks/Mitigations,Original Ref
S,Raster IO & Streaming,S1,Rasterio windowed reads + block iterator,Absent,"No evidence found","python/forge3d/adapters/rasterio_tiles.py; rasterio imports; windowed read functions; block iterator","Create python/forge3d/adapters/rasterio_tiles.py; Add rasterio dependency; Implement windowed_read() and block_iterator(); Integrate with B1/B4",High,MVP,"B1;B4","I/O bottlenecks → use rasterio block_windows and prefetch; verify alignment","roadmap.csv row: S1"
S,Raster IO & Streaming,S2,Nodata/mask → alpha propagation,Absent,"No evidence found","Mask extraction functions; alpha channel integration; read_masks() usage","Extend S1 with extract_masks() function; Implement alpha=0 for nodata; Integration with RGBA pipeline (B7 dependency)",High,MVP,"O1;B7","Differences between per-band and dataset masks → follow rasterio docs and add unit tests","roadmap.csv row: S2"  
S,Raster IO & Streaming,S3,CRS normalization via WarpedVRT + pyproj,Absent,"No evidence found","python/forge3d/adapters/reproject.py; WarpedVRT usage; pyproj Transformer; EPSG transform tests","Create python/forge3d/adapters/reproject.py; Add pyproj dependency; Implement WarpedVRTWrapper class; Add CRS transform functions",Medium,MVP,"O1","Missing grid shift files → document PROJ data download; precision diffs → accept small tolerance","roadmap.csv row: S3"
S,Raster IO & Streaming,S4,xarray/rioxarray DataArray ingestion,Absent,"No evidence found","python/forge3d/ingest/ directory; xarray_adapter.py; DataArray ingestion; rio accessor usage","Create python/forge3d/ingest/ directory; Create xarray_adapter.py; Add xarray/rioxarray dependencies; Implement ingest_dataarray() with .rio.crs/.rio.transform support",High,MVP,"B1;B4;O3","Inconsistent metadata → validate presence and raise clear error","roadmap.csv row: S4"
S,Raster IO & Streaming,S5,Dask-chunked raster ingestion,Absent,"No evidence found","python/forge3d/ingest/dask_adapter.py; dask.array support; chunk planning; backpressure logic","Create dask_adapter.py; Add dask[array] dependency; Implement chunk planning and backpressure; Memory management for lazy loading",Medium,Beyond MVP,"O1;O4","Chunk mismatch hurts performance → recommend chunk shapes per docs; add metrics","roadmap.csv row: S5"
S,Raster IO & Streaming,S6,Overview/LOD selection,Absent,"No evidence found","Overview selection logic; dataset.overviews() usage; resolution-based selection","Extend S1 with select_overview_level(); Implement dataset.overviews() integration; Add performance metrics for byte reduction",Low,Beyond MVP,"O1","Missing overviews → fall back to resampling; document trade-offs","roadmap.csv row: S6"