#!/usr/bin/env bash
# Multi-agent pre-push hook for vulkan-forge
# - Runs your local orchestrator (XML mode by default)
# - If it creates a new commit (e.g., Claude applied a patch), the push is blocked once.
# - Compatible with Windows (Git Bash), macOS, and Linux.

set -euo pipefail

# --- Fast skips --------------------------------------------------------------
# Skip when the last commit message contains [no-ai]
if git log -1 --pretty=%B | grep -qi '\[no-ai\]'; then
  exit 0
fi
# Skip when a repo marker exists
if [ -f ".ai/disable" ]; then
  echo "[ai] .ai/disable present; skipping pre-push checks."
  exit 0
fi

# --- Which orchestrator to run ----------------------------------------------
# Default to XML mode (task.xml flow). Set AI_MODE=json to use the JSON reviewer flow.
AI_MODE="${AI_MODE:-xml}"
SCRIPT="scripts/ai_orchestrator_xml.py"
if [ "$AI_MODE" = "json" ]; then
  SCRIPT="scripts/ai_orchestrator.py"
fi

if [ ! -f "$SCRIPT" ]; then
  echo "[ai] Orchestrator not found at: $SCRIPT" >&2
  echo "[ai] Set AI_MODE=json if you intended to run scripts/ai_orchestrator.py" >&2
  exit 1
fi

# --- Pick a Python launcher (Windows-safe) -----------------------------------
if command -v py >/dev/null 2>&1; then
  PY_CMD=(py -3)
elif command -v python3 >/dev/null 2>&1; then
  PY_CMD=(python3)
elif command -v python >/dev/null 2>&1; then
  PY_CMD=(python)
else
  echo "[ai] No Python launcher found (py/python3/python). Install Python and try again." >&2
  exit 1
fi

# --- Remember current HEAD so we can detect new commits ----------------------
HEAD_BEFORE="$(git rev-parse HEAD)"

echo "[ai] Running $AI_MODE orchestrator: $SCRIPT"
"${PY_CMD[@]}" "$SCRIPT" || {
  echo "[ai] Orchestrator failed; stopping push."
  exit 1
}

HEAD_AFTER="$(git rev-parse HEAD)"

# If the orchestrator created a new commit (e.g., applied Claudeâ€™s patch),
# abort this push once so the user can review. Next push will include it.
if [ "$HEAD_BEFORE" != "$HEAD_AFTER" ]; then
  echo "[ai] New commit created by orchestrator: ${HEAD_AFTER:0:7}"
  echo "[ai] Push aborted once so you can review the changes. Push again to include the new commit."
  exit 1
fi

# Also stop if the working tree or index changed (uncommitted edits)
if ! git diff --quiet || ! git diff --cached --quiet; then
  echo "[ai] Working tree or index changed. Review/commit before pushing."
  exit 1
fi

exit 0
